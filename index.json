[
  {
    "name": "N with Tilde",
    "text": "√±",
    "keyword": "spanishn"
  },
  {
    "name": "E with Acute",
    "text": "√©",
    "keyword": "acutee"
  },
  {
    "name": "A with Umlaut",
    "text": "√§",
    "keyword": "umlautA"
  },
  {
    "name": "Git Status",
    "text": "git status",
    "keyword": "gitstatus"
  },
  {
    "name": "Git Commit Message",
    "text": "git commit -m \"\"",
    "keyword": "gitcommit"
  },
  {
    "name": "Git Push Origin",
    "text": "git push origin ",
    "keyword": "gitpush"
  },
  {
    "name": "Select From",
    "text": "SELECT * FROM ",
    "keyword": "slct"
  },
  {
    "name": "Inner Join",
    "text": "INNER JOIN ",
    "keyword": "injn"
  },
  {
    "name": "Where Clause",
    "text": "WHERE ",
    "keyword": "whr"
  },
  {
    "name": "Group By",
    "text": "GROUP BY ",
    "keyword": "grpby"
  },
  {
    "name": "Initialize",
    "text": "initialize",
    "keyword": "intlz"
  },
  {
    "name": "Implement",
    "text": "implement",
    "keyword": "implmnt"
  },
  {
    "name": "Configure",
    "text": "configure",
    "keyword": "cnfgr"
  },
  {
    "name": "Generate",
    "text": "generate",
    "keyword": "gnrt"
  },
  {
    "name": "Validate",
    "text": "validate",
    "keyword": "vldtt"
  },
  {
    "name": "Singleton Pattern",
    "text": "singleton pattern",
    "keyword": "sngltn"
  },
  {
    "name": "Factory Method",
    "text": "factory method",
    "keyword": "fctry"
  },
  {
    "name": "Observer Pattern",
    "text": "observer pattern",
    "keyword": "obsrvr"
  },
  {
    "name": "Strategy Pattern",
    "text": "strategy pattern",
    "keyword": "strtgy"
  },
  {
    "name": "Application",
    "text": "application",
    "keyword": "aplctn"
  },
  {
    "name": "Environment",
    "text": "environment",
    "keyword": "envrmnt"
  },
  {
    "name": "Configuration",
    "text": "configuration",
    "keyword": "cnfg"
  },
  {
    "name": "Management",
    "text": "management",
    "keyword": "mngmnt"
  },
  {
    "name": "Describe Block",
    "text": "describe('', () => {\n  \n});",
    "keyword": "testdescribe"
  },
  {
    "name": "Test Case",
    "text": "test('', () => {\n  \n});",
    "keyword": "testcase"
  },
  {
    "name": "Expect Statement",
    "text": "expect().toBe();",
    "keyword": "testexpect"
  },
  {
    "name": "Change Directory",
    "text": "cd ",
    "keyword": "cdir"
  },
  {
    "name": "List Files",
    "text": "ls -la",
    "keyword": "lsf"
  },
  {
    "name": "Process Status Grep",
    "text": "ps aux | grep ",
    "keyword": "psgrep"
  },
  {
    "name": "Remove Force",
    "text": "rm -rf ",
    "keyword": "rmforce"
  },
  {
    "name": "Docker Compose Up",
    "text": "docker-compose up -d",
    "keyword": "dockup"
  },
  {
    "name": "Thumbs Up",
    "text": "üëç",
    "keyword": "thumbsup"
  },
  {
    "name": "Check Mark",
    "text": "‚úÖ",
    "keyword": "greencheck"
  },
  {
    "name": "Warning",
    "text": "‚ö†Ô∏è",
    "keyword": "warningsign"
  },
  {
    "name": "Rocket",
    "text": "üöÄ",
    "keyword": "rocketship"
  },
  {
    "name": "Bug",
    "text": "üêõ",
    "keyword": "bugfix"
  },
  {
    "name": "Fire",
    "text": "üî•",
    "keyword": "fireemoji"
  },
  {
    "name": "Sparkles",
    "text": "‚ú®",
    "keyword": "sparkleemoji"
  },
  {
    "name": "Heart",
    "text": "‚ù§Ô∏è",
    "keyword": "redheart"
  },
  {
    "name": "Lightning",
    "text": "‚ö°",
    "keyword": "zapbolt"
  },
  {
    "name": "Gear",
    "text": "‚öôÔ∏è",
    "keyword": "settingsgear"
  },
  {
    "name": "Ellipsis",
    "text": "...",
    "keyword": "ellipsis"
  },
  {
    "name": "Em Dash",
    "text": "‚Äî",
    "keyword": "emdash"
  },
  {
    "name": "En Dash",
    "text": "-",
    "keyword": "endash"
  },
  {
    "name": "Quotation Marks",
    "text": "\"\"",
    "keyword": "quote"
  },
  {
    "name": "Single Quotes",
    "text": "''",
    "keyword": "squote"
  },
  {
    "name": "Parentheses",
    "text": "()",
    "keyword": "paren"
  },
  {
    "name": "Square Brackets",
    "text": "[]",
    "keyword": "bracket"
  },
  {
    "name": "Curly Braces",
    "text": "{}",
    "keyword": "brace"
  },
  {
    "name": "Angle Brackets",
    "text": "<>",
    "keyword": "angle"
  },
  {
    "name": "Copyright",
    "text": "¬©",
    "keyword": "copyright"
  },
  {
    "name": "Registered",
    "text": "¬Æ",
    "keyword": "registered"
  },
  {
    "name": "Trademark",
    "text": "‚Ñ¢",
    "keyword": "trademark"
  },
  {
    "name": "Bullet Point",
    "text": "‚Ä¢",
    "keyword": "bullet"
  },
  {
    "name": "Section",
    "text": "¬ß",
    "keyword": "section"
  },
  {
    "name": "Degree",
    "text": "¬∞",
    "keyword": "degree"
  },
  {
    "name": "Plus Minus",
    "text": "¬±",
    "keyword": "plusminus"
  },
  {
    "name": "Multiplication",
    "text": "√ó",
    "keyword": "multiply"
  },
  {
    "name": "Division",
    "text": "√∑",
    "keyword": "divide"
  },
  {
    "name": "Not Equal",
    "text": "‚â†",
    "keyword": "notequal"
  },
  {
    "name": "Approximately",
    "text": "‚âà",
    "keyword": "aprx"
  },
  {
    "name": "Less Equal",
    "text": "‚â§",
    "keyword": "leq"
  },
  {
    "name": "Greater Equal",
    "text": "‚â•",
    "keyword": "geq"
  },
  {
    "name": "Infinity",
    "text": "‚àû",
    "keyword": "inf"
  },
  {
    "name": "Check Mark",
    "text": "‚úì",
    "keyword": "chk"
  },
  {
    "name": "Cross Mark",
    "text": "‚úó",
    "keyword": "crx"
  },
  {
    "name": "Arrow Right",
    "text": "‚Üí",
    "keyword": "arr"
  },
  {
    "name": "Arrow Left",
    "text": "‚Üê",
    "keyword": "arl"
  },
  {
    "name": "Arrow Up",
    "text": "‚Üë",
    "keyword": "aru"
  },
  {
    "name": "Arrow Down",
    "text": "‚Üì",
    "keyword": "ard"
  },
  {
    "name": "Double Arrow",
    "text": "‚áÑ",
    "keyword": "darr"
  },
  {
    "name": "Lambda Symbol",
    "text": "Œª",
    "keyword": "lambdasym"
  },
  {
    "name": "Function Symbol",
    "text": "∆í",
    "keyword": "functionsym"
  },
  {
    "name": "For All",
    "text": "‚àÄ",
    "keyword": "forallsym"
  },
  {
    "name": "Necessary",
    "text": "necessary",
    "keyword": "nec"
  },
  {
    "name": "Separate",
    "text": "separate",
    "keyword": "sep"
  },
  {
    "name": "Definitely",
    "text": "definitely",
    "keyword": "def"
  },
  {
    "name": "Receive",
    "text": "receive",
    "keyword": "rcv"
  },
  {
    "name": "Occurrence",
    "text": "occurrence",
    "keyword": "occ"
  },
  {
    "name": "React Component",
    "text": "const Component = () => {\n  return (\n    <>\n    </>\n  );\n};",
    "keyword": "reactcomponent"
  },
  {
    "name": "Use State Hook",
    "text": "const [state, setState] = useState();",
    "keyword": "reactusestate"
  },
  {
    "name": "Use Effect Hook",
    "text": "useEffect(() => {\n  \n}, []);",
    "keyword": "reacteffect"
  },
  {
    "name": "Vue Component",
    "text": "<template>\n  \n</template>\n\n<script setup>\n\n</script>",
    "keyword": "vcomp"
  },
  {
    "name": "Vue Ref",
    "text": "const value = ref()",
    "keyword": "vref"
  },
  {
    "name": "Vue Reactive",
    "text": "const state = reactive({})",
    "keyword": "vreact"
  },
  {
    "name": "Vue Computed",
    "text": "const computed = computed(() => {})",
    "keyword": "vcmpt"
  },
  {
    "name": "Vue Watch",
    "text": "watch(source, (newValue, oldValue) => {})",
    "keyword": "vwtch"
  },
  {
    "name": "Next Page",
    "text": "export default function Page() {\n  return (\n    <>\n    </>\n  );\n}",
    "keyword": "npage"
  },
  {
    "name": "Get Server Side Props",
    "text": "export async function getServerSideProps(context) {\n  return {\n    props: {}\n  };\n}",
    "keyword": "ngssp"
  },
  {
    "name": "Get Static Props",
    "text": "export async function getStaticProps(context) {\n  return {\n    props: {}\n  };\n}",
    "keyword": "ngsp"
  },
  {
    "name": "API Route",
    "text": "export default async function handler(req, res) {\n  \n}",
    "keyword": "napi"
  },
  {
    "name": "Angular Component",
    "text": "@Component({\n  selector: '',\n  template: ''\n})\nexport class Component {}",
    "keyword": "ngcomp"
  },
  {
    "name": "Angular Service",
    "text": "@Injectable({\n  providedIn: 'root'\n})\nexport class Service {}",
    "keyword": "ngsvc"
  },
  {
    "name": "Angular Directive",
    "text": "@Directive({\n  selector: ''\n})\nexport class Directive {}",
    "keyword": "ngdir"
  },
  {
    "name": "Angular Pipe",
    "text": "@Pipe({\n  name: ''\n})\nexport class Pipe {}",
    "keyword": "ngpipe"
  },
  {
    "name": "Express Route",
    "text": "app.get('/', async (req, res) => {\n  \n});",
    "keyword": "xget"
  },
  {
    "name": "Express Post",
    "text": "app.post('/', async (req, res) => {\n  \n});",
    "keyword": "xpost"
  },
  {
    "name": "Express Middleware",
    "text": "const middleware = (req, res, next) => {\n  \n};",
    "keyword": "xmid"
  },
  {
    "name": "Express Router",
    "text": "const router = express.Router();\n\nmodule.exports = router;",
    "keyword": "xrtr"
  },
  {
    "name": "Authentication",
    "text": "authentication",
    "keyword": "authntc"
  },
  {
    "name": "Authorization",
    "text": "authorization",
    "keyword": "authrztn"
  },
  {
    "name": "Infrastructure",
    "text": "infrastructure",
    "keyword": "infstr"
  },
  {
    "name": "Architecture",
    "text": "architecture",
    "keyword": "rchtctr"
  },
  {
    "name": "Experience",
    "text": "experience",
    "keyword": "xprnc"
  },
  {
    "name": "Opportunity",
    "text": "opportunity",
    "keyword": "oprtn"
  },
  {
    "name": "Necessary",
    "text": "necessary",
    "keyword": "ncsry"
  },
  {
    "name": "Different",
    "text": "different",
    "keyword": "dfrnt"
  },
  {
    "name": "Government",
    "text": "government",
    "keyword": "gvrmnt"
  },
  {
    "name": "Important",
    "text": "important",
    "keyword": "imprt"
  },
  {
    "name": "Knowledge",
    "text": "knowledge",
    "keyword": "knwldg"
  },
  {
    "name": "Business",
    "text": "business",
    "keyword": "bsns"
  },
  {
    "name": "Question",
    "text": "question",
    "keyword": "qstn"
  },
  {
    "name": "Information",
    "text": "information",
    "keyword": "infrmtn"
  },
  {
    "name": "Available",
    "text": "available",
    "keyword": "avlbl"
  },
  {
    "name": "Community",
    "text": "community",
    "keyword": "cmnty"
  },
  {
    "name": "Education",
    "text": "education",
    "keyword": "edctn"
  },
  {
    "name": "Technology",
    "text": "technology",
    "keyword": "tchnlg"
  },
  {
    "name": "Resources",
    "text": "resources",
    "keyword": "rsrcs"
  },
  {
    "name": "Development",
    "text": "development",
    "keyword": "dvlpmnt"
  },
  {
    "name": "Ending -tion",
    "text": "tion",
    "keyword": "tn"
  },
  {
    "name": "Ending -able",
    "text": "able",
    "keyword": "abl"
  },
  {
    "name": "Ending -ible",
    "text": "ible",
    "keyword": "ibl"
  },
  {
    "name": "Ending -ing",
    "text": "ing",
    "keyword": "ng"
  },
  {
    "name": "Ending -ment",
    "text": "ment",
    "keyword": "mnt"
  },
  {
    "name": "Ending -ness",
    "text": "ness",
    "keyword": "nss"
  },
  {
    "name": "Today's Date",
    "text": "YYYY-MM-DD",
    "keyword": "tday"
  },
  {
    "name": "Current Time",
    "text": "HH:mm:ss",
    "keyword": "ctime"
  },
  {
    "name": "Phone Number",
    "text": "+1 (xxx) xxx-xxxx",
    "keyword": "pnum"
  },
  {
    "name": "ZIP Code",
    "text": "xxxxx-xxxx",
    "keyword": "zipc"
  },
  {
    "name": "In order to",
    "text": "in order to",
    "keyword": "iot"
  },
  {
    "name": "As well as",
    "text": "as well as",
    "keyword": "awa"
  },
  {
    "name": "Due to the",
    "text": "due to the",
    "keyword": "dtt"
  },
  {
    "name": "On the other hand",
    "text": "on the other hand",
    "keyword": "otoh"
  },
  {
    "name": "At the same time",
    "text": "at the same time",
    "keyword": "atst"
  },
  {
    "name": "Square Root",
    "text": "‚àö",
    "keyword": "squareroot"
  },
  {
    "name": "Integral",
    "text": "‚à´",
    "keyword": "integral"
  },
  {
    "name": "Partial",
    "text": "‚àÇ",
    "keyword": "partial"
  },
  {
    "name": "Delta",
    "text": "Œî",
    "keyword": "deltamath"
  },
  {
    "name": "Pi",
    "text": "œÄ",
    "keyword": "pimath"
  },
  {
    "name": "Sum",
    "text": "‚àë",
    "keyword": "summation"
  },
  {
    "name": "Product",
    "text": "‚àè",
    "keyword": "product"
  },
  {
    "name": "Subset",
    "text": "‚äÇ",
    "keyword": "subset"
  },
  {
    "name": "Intersection",
    "text": "‚à©",
    "keyword": "intersect"
  },
  {
    "name": "Union",
    "text": "‚à™",
    "keyword": "union"
  },
  {
    "name": "US Dollar",
    "text": "$",
    "keyword": "usdollar"
  },
  {
    "name": "Euro",
    "text": "‚Ç¨",
    "keyword": "eurosign"
  },
  {
    "name": "British Pound",
    "text": "¬£",
    "keyword": "poundsterling"
  },
  {
    "name": "Japanese Yen",
    "text": "¬•",
    "keyword": "yenjapan"
  },
  {
    "name": "Bitcoin",
    "text": "‚Çø",
    "keyword": "bitcoinsymbol"
  },
  {
    "name": "Indian Rupee",
    "text": "‚Çπ",
    "keyword": "rupeeindia"
  },
  {
    "name": "Russian Ruble",
    "text": "‚ÇΩ",
    "keyword": "rublerussia"
  },
  {
    "name": "Korean Won",
    "text": "‚Ç©",
    "keyword": "wonkorea"
  },
  {
    "name": "Function Parameters",
    "text": "@param {type} name - description",
    "keyword": "docparam"
  },
  {
    "name": "Returns Documentation",
    "text": "@returns {type} description",
    "keyword": "docreturn"
  },
  {
    "name": "Example Usage",
    "text": "@example\n * ```js\n * // code\n * ```",
    "keyword": "docexample"
  },
  {
    "name": "Function",
    "text": "function",
    "keyword": "fnc"
  },
  {
    "name": "Variable",
    "text": "variable",
    "keyword": "vrbl"
  },
  {
    "name": "Constructor",
    "text": "constructor",
    "keyword": "cnstr"
  },
  {
    "name": "Interface",
    "text": "interface",
    "keyword": "intrfc"
  },
  {
    "name": "Through",
    "text": "through",
    "keyword": "thrgh"
  },
  {
    "name": "Because",
    "text": "because",
    "keyword": "becz"
  },
  {
    "name": "Between",
    "text": "between",
    "keyword": "btwnn"
  },
  {
    "name": "As far as I know",
    "text": "as far as I know",
    "keyword": "afaik"
  },
  {
    "name": "In my opinion",
    "text": "in my opinion",
    "keyword": "imo"
  }
]
